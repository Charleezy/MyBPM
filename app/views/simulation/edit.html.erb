<script type="text/javascript">
	$(document).ready(function() {
		var mockdata_text = $('#mockdata').text();
		var mockdata;
		
		// If this is the first time opening this simulation, initialize mock data structure
		if (mockdata_text == "" || mockdata_text == null) {
			mockdata = { "stages" : [] };
		}
		// Convert string to JSON
		else {
			mockdata = jQuery.parseJSON($('#mockdata').text());
		}

		var workflow_json = <%= @workflow.json.to_json.html_safe %>;
		
		var alreadyLoaded = false;

		if(!alreadyLoaded){
			var bpmn = new net.BpmnJS(workflow_json, $('#canvas')[0], true);
			bpmn.plot();
			alreadyLoaded = true;
		}
	  
		$('#canvas').on( "click", "circle", function() {
			$('#addData').modal('show');
		});
		
		$('#canvas').on( "click", "rect", function() {
			$('#addData').modal('show');
		});
		
		$('#addData').on('hidden.bs.modal', function () {
			$('#key').val("");
			$('#value').val("");
			$('#add_data_err').hide();
		});
		
		$('#run_sim').click(function() {
			var sim_id = $('#sim_id').text();
			
			$.ajax({
				beforeSend: function(req) {
					req.setRequestHeader("Accept", "application/json");
				},
				url: "/simulation/run",
				data: { id : sim_id },
				success: function(data) {
					alert(data);
				}
			});
		});
		
		$('#add').click(function() {
			// ID of the clicked element
			//var stage_id = $(this).id;
			var stage_id = "A3";
			
			var i = 0;
			var flag = 0;
			
			// Get key value pair that the user entered
			var key = $('#key').val();
			var value = $('#value').val();
			
			// Validation check on key/value pair
			if (key == "" || value == "") {
				$('#add_data_err').show();
			}
			else {
				for(i = 0; i < mockdata.stages.length; i++) {
					// If data already exists for this stage, append data
					if (mockdata.stages[i]['stage_id'] == stage_id) {
						mockdata.stages[i].stage_data.push(new stage_data(key, value));
						flag = 1;
						break;
					}
				}
				
				// If stage_id was not found, create a new stage and append data
				if (flag == 0) {
					mockdata.stages.push(new stage(stage_id));
					var result = $.grep(mockdata.stages, function(e){ return e.stage_id == stage_id; });
					result[0].stage_data.push(new stage_data(key, value));
				}
				
				$('#addData').modal('hide');
			}
		});
		
		$('#save_mockdata').click(function() {
			var sim_id = $('#sim_id').text();
			var workflow_id = $('#workflow_id').text();
			
			$.ajax({
				beforeSend: function(req) {
					req.setRequestHeader("Accept", "application/json");
				},
				url: "/simulation/" + sim_id,
				type: "PUT",
				data: { mockdata : { "workflow_id" : workflow_id, "mockdata" : JSON.stringify(mockdata) } }
			});
		});
		
		$('#clear_mockdata').click(function() {
			var answer = confirm('Are you sure you want to delete all your mock data?');
			if(answer == true) {
				mockdata = { "stages" : [] };
			}
			console.log(mockdata);
		});
	});
	
	// Stage object
	function stage(stage_id)
	{
		this.stage_id = stage_id;
		this.stage_data = new Array();
	}
	
	// Key/value pair mock data object
	function stage_data(key, value)
	{
		this.name = key;
		this.value = value;
	}
	
</script>

<span id="sim_id" style="display:none"><%= @simulation.id %></span>
<span id="workflow_id" style="display:none"><%= @workflow.id %></span>
<span id="mockdata" style="display:none"><%= @simulation.mockdata %></span>
<span id="workflow_json" style="display:none"><%= @workflow.json %></span>

<h1 class="sim_title"><%= @simulation.name %></h1>

<div class="row" id="sim_container">
	<div class="col-md-8">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">Workflow</h3>
			</div>
			<div class="panel-body">
				<div id="canvas"></div>
			</div>
		</div>
		
		<div class="btn-group">
			<button type="button" class="btn btn-primary sim_button" id="save_mockdata">Save Changes</button>
			<button type="button" class="btn btn-primary sim_button" id="clear_mockdata">Clear Mock Data</button>
		</div>
	</div>
	<div class="col-md-4">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h3 class="panel-title">Simulation Results</h3>
		</div>
		<div class="panel-body">
			<div id="sim_results"></div>
		</div>
	</div>
	<div class="btn-group">
		<button type="button" class="btn btn-primary sim_button" id="run_sim">Run Simulation</button>
	</div>
</div>

<div class="modal fade" id="addData" role="dialog" aria-labelledby="addDataModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="addDataModalLabel">Add Mock Data</h4>
            </div>

            <div class="modal-body">
                <div class="form-container row">
					<div id="add_data_err" class="alert alert-danger">
						<strong>Error:</strong> Key and value cannot be blank!
					</div>
                    <div class="keyval_row row">
						<div class="col-md-5">
							<div class="formLabel">
								<label for="key">Key</label>
							</div>
							<div class="formField">
								<input id="key" name="key" type="text" class="form-control" />
							</div>
						</div>
						<div class="col-md-5">
							<div class="formLabel">
								<label for="value">Value</label>
							</div>
							<div class="formField">
								<input id="value" name="value" type="text" class="form-control" />
							</div>
						</div>
						<div class="col-md-2 add_remove_buttons">
							<div class="btn-group">
								<button class="btn btn-success">+</button>
								<button class="btn btn-danger">-</button>
							</div>
						</div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button id="add" type="button" class="btn btn-primary">Add</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>

        </div>
    </div>
</div>