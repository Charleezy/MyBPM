<script type="text/javascript">
	var current_id;

	$(document).ready(function() {
		var mockdata_text = $('#mockdata').text();
		var mockdata;
		
		// If this is the first time opening this simulation, initialize mock data structure
		if (mockdata_text == "" || mockdata_text == null) {
			mockdata = { "stages" : [] };
		}
		// Convert string to JSON
		else {
			mockdata = jQuery.parseJSON($('#mockdata').text());
		}

		var workflow_json = <%= @workflow.json.to_json.html_safe %>;
		
		var alreadyLoaded = false;

		if(!alreadyLoaded){
			var bpmn = new net.BpmnJS(workflow_json, $('#canvas')[0], true);
			bpmn.plot();
			alreadyLoaded = true;
		}
	    /*
		$('#canvas').on( "click", "circle", function() {
			if ($(this).attr("data-type") == "Task") {
				$('#addData').modal('show');
				current_id = $(this).attr('id');
			}
		});
		*/
		$('#canvas').on( "click", "rect", function() {
			if ($(this).attr("data-type") == "Task") {
				$('#addData').modal('show');
				current_id = $(this).attr('id');
			}
		});
		
		$(document).on( "mouseenter", "rect", function(evt) {
			// If we hover on an activity
			if ($(this).attr("data-type") == "Task") {
				// Get the id of this activity
				var id = $(this).attr('id');
				
				// Find mockdata for this activity
				var result = mockdata.stages.filter(function(element){
					if (element.stage_id == id) {
						return true;
					} else {
						return false;
					}
				});
				
				// If mockdata exists for this stage, display it
				if (result[0] != null) {
					var targ = $('#page-wrapper');
					var x = evt.pageX - $(targ).offset().left;
					var y = evt.pageY - $(targ).offset().top;
					
					$("#popOver").css({
						top: y,
						left: x
					}).show();
				
					result[0].stage_data.forEach(function(data) {
						$('#data_list').append('<li>' + data.name + ': ' + data.value + '</li>');
					});
				}
			}
		});
		
		$(document).on( "mouseleave", "rect", function() {
			if ($(this).attr("data-type") == "Task") {
				$('#popOver').hide();
				$('#data_list li').remove();
			}
		});
		
		$('#alert_close').click(function () {
			$('#sim_alert').hide();
		});
		
		$('#addData').on('hidden.bs.modal', function () {
			$('#key').val("");
			$('#value').val("");
			$('#add_data_err').hide();
			$('#sim_alert').show();
		});
		
		$('#run_sim').click(function() {
			var sim_id = $('#sim_id').text();
			
			$.ajax({
				beforeSend: function(req) {
					req.setRequestHeader("Accept", "application/json");
				},
				url: "/simulation/run",
				data: { id : sim_id },
				success: function(data) {
					$('#alert_msg').html('Simulation has completed!');
					$('#sim_alert').show();
				}
			});
		});
		
		$('#add').click(function() {
			// ID of the clicked element
			var stage_id = current_id;
			
			var i = 0;
			var flag = 0;
			
			// Get key value pair that the user entered
			var key = $('#key').val();
			var value = $('#value').val();
			
			// Validation check on key/value pair
			if (key == "" || value == "") {
				$('#add_data_err').show();
			}
			else {
				for(i = 0; i < mockdata.stages.length; i++) {
					// If data already exists for this stage, append data
					if (mockdata.stages[i]['stage_id'] == stage_id) {
						mockdata.stages[i].stage_data.push(new stage_data(key, value));
						flag = 1;
						break;
					}
				}
				
				// If stage_id was not found, create a new stage and append data
				if (flag == 0) {
					mockdata.stages.push(new stage(stage_id));
					var result = $.grep(mockdata.stages, function(e){ return e.stage_id == stage_id; });
					result[0].stage_data.push(new stage_data(key, value));
				}
				
				$('#key').val('');
				$('#value').val('');
				
				$('#alert_msg').html('Your changes will be permanently saved once you hit the "Save Changes" button.');
				//$('#sim_alert').show();
				//$('#addData').modal('hide');
			}
		});
		
		$('#clear_stagedata').click(function () {
			var stage_id = current_id;
			
			mockdata.stages = $.grep(mockdata.stages, function(e){ 
				return e.stage_id != stage_id; 
			});
			console.log(mockdata);
			$('#alert_msg').html('Your changes will be permanently saved once you hit the "Save Changes" button.');
			$('#sim_alert').show();
			$('#addData').modal('hide');
		});
		
		$('#save_mockdata').click(function() {
			var sim_id = $('#sim_id').text();
			var workflow_id = $('#workflow_id').text();
			
			$.ajax({
				beforeSend: function(req) {
					req.setRequestHeader("Accept", "application/json");
				},
				url: "/simulation/" + sim_id,
				type: "PUT",
				data: { mockdata : { "workflow_id" : workflow_id, "mockdata" : JSON.stringify(mockdata) } },
				success: function() {
					$('#alert_msg').html('Your changes have been saved!');
					$('#sim_alert').show();
				}
			});
		});
		
		$('#clear_mockdata').click(function() {
			var answer = confirm('Are you sure you want to permanently delete all your mock data?');
			if(answer == true) {
				var sim_id = $('#sim_id').text();
				var workflow_id = $('#workflow_id').text();
				var empty_mockdata = { "stages" : [] };
			
				$.ajax({
					beforeSend: function(req) {
						req.setRequestHeader("Accept", "application/json");
					},
					url: "/simulation/" + sim_id,
					type: "PUT",
					data: { mockdata : { "workflow_id" : workflow_id, "mockdata" : JSON.stringify(empty_mockdata) } },
					success: function() {
						mockdata = { "stages" : [] };
						$('#alert_msg').html('All Mock Data has been cleared. Click on an element to create new data.');
						$('#sim_alert').show();
					}
				});
			}
		});
	});
	
	// Stage object
	function stage(stage_id)
	{
		this.stage_id = stage_id;
		this.stage_data = new Array();
	}
	
	// Key/value pair mock data object
	function stage_data(key, value)
	{
		this.name = key;
		this.value = value;
	}
	
</script>

<span id="sim_id" style="display:none"><%= @simulation.id %></span>
<span id="workflow_id" style="display:none"><%= @workflow.id %></span>
<span id="mockdata" style="display:none"><%= @simulation.mockdata %></span>

<h1 class="sim_title"><%= @simulation.name %></h1>

<hr>

<div id="sim_alert" class="alert alert-info">
	<button id="alert_close" type="button" class="close" aria-hidden="true">&times;</button>
	<p id="alert_msg">Click on an element to edit its Mock Data.</p>
</div>

<div class="row" id="sim_container">
	<div class="col-md-8">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">Workflow</h3>
			</div>
			<div class="panel-body">
				<div id="canvas"></div>
			</div>
		</div>
		
		<button type="button" class="btn btn-primary sim_button" id="save_mockdata">Save Changes</button>
		<button type="button" class="btn btn-primary sim_button" id="clear_mockdata">Clear All Data</button>
		
	</div>
	<div class="col-md-4">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">Simulation Results</h3>
			</div>
			<div class="panel-body">
				<div id="sim_results"></div>
			</div>
		</div>
		<div class="btn-group">
			<button type="button" class="btn btn-primary sim_button" id="run_sim">Run Simulation</button>
		</div>
	</div>
</div>

<div class="modal fade" id="addData" role="dialog" aria-labelledby="addDataModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="addDataModalLabel">Edit Mock Data</h4>
            </div>

            <div class="modal-body">
                <div class="form-container row">
					<div id="add_data_err" class="alert alert-danger">
						<strong>Error:</strong> Key and value cannot be blank!
					</div>
					
                    <div class="keyval_row row">
						<div class="col-md-6">
							<div class="formLabel">
								<label for="key">Key</label>
							</div>
							<div class="formField">
								<input id="key" name="key" type="text" class="form-control" />
							</div>
						</div>
						<div class="col-md-6">
							<div class="formLabel">
								<label for="value">Value</label>
							</div>
							<div class="formField">
								<input id="value" name="value" type="text" class="form-control" />
							</div>
						</div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
				<button id="add" type="button" class="btn btn-primary">Add Key/Value</button>
				<button id="clear_stagedata" class="btn btn-primary">Clear Stage Data</button>
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div id="popOver">
	<h4>Mock Data</h4>
	<ul id="data_list">
	</ul>
</div>