<%#= form_for :bpmn do |f| %>
  <%#= f.file_field :bpmn %>
<%# end %>
<%= stylesheet_link_tag 'workflow' %>
<%= javascript_include_tag 'ext_lib/xml2json.min.js' %>
<%= javascript_include_tag 'ext_lib/raphael.js' %>
<%= javascript_include_tag 'uuid.js' %>
<%= javascript_include_tag 'workflow/bpmn.js' %>
<%= javascript_include_tag 'workflow/xpdl-json-generator.js' %>
<%= javascript_include_tag 'workflow/graffle.js' %>
<script type="text/javascript">


$(function(){

  var alreadyLoaded = false;

  var workflow = null;

  // TODO
  // MAKE THE CANVAS RESIZABLE
  // http://jqueryui.com/resizable/
  
  // Workflow editor instructions.
  $('#help').click(function() {
    $(this).toggleClass('active');
    $('#instructions').toggleClass('hide');
  });

  $(document).keypress(function(e) {
    var checkUndo = (e.which == 117);
    $("#log").text("Todo: undo action!");
    });


  // Make a call to the server to create a new (blank) workflow.
  // Save the id for future save (update) calls.
  $.ajax({
    beforeSend: function(req) {
      req.setRequestHeader("Accept", "application/json");
    },
    url: "/workflow/create", 
    type: "POST",
    data: {
      workflow: {
        name: "test", // TODO read from user
        xpdl: null
      }
    },
    success: function(jsonObject) {
      console.log('success');
      console.log(jsonObject);
      // TODO grab the workfow id of our newly-created workflow; should be 
      // within the response object.
    }
  });

  // WHEN YOU CLICK THE 'LOAD DEFAULT WORKFLOW' BUTTON
  $("#import").click(function() {
      loadDefaultView();
      });
  function loadDefaultView() {

    // IF IT'S NOT ALREADY LOADED, MAKES AN AJAX CALL TO THE SERVER REQUESTING THE JSON AND DRAWS THE WORKFLOW WHEN THE DATA IS RETRIEVED
    if(!alreadyLoaded){

      console.log('waiting for server');
      
      $.ajax({
        beforeSend: function(req) {
          req.setRequestHeader("Accept", "application/json");
        },
        url: "/workflow/xpdltojson", 
        type: "POST",
        success: function(jsonObject) {
          console.log('server responded!');
          console.log(jsonObject);
          $('#toolbox').removeClass('hide');
          workflow = new net.BpmnJS(jsonObject,$('#canvas')[0],false);
          workflow.plot();

          $('#convert').click(function(){
              $('#jsonText').removeClass('hide');
              $('#jsonText').html(JSON.stringify(jsonObject));
          });

          // FIXME you shouldn't have to import in order to be allowed to save the workflow...
          // what about workflows started from scratch without importing?
          $("#save").click(function() {
            console.log('saving (updating) the workflow...');
            var xpdlJson = workflow.updateXPDL();

            // This assume a workflow has already been created and assigned an id.
            $.ajax({
              beforeSend: function(req) {
                req.setRequestHeader("Accept", "application/json");
              },
              url: "/workflow/update", 
              type: "POST",
              data: {
                workflow: {
                  id: workflowId,
                  name: "test", // TODO read from user
                  xpdl: xpdlJson
                }
              },
              success: function(jsonObject) {
                console.log('success');
                console.log(jsonObject);
              }
            });
          });

          // Toolbox listeners
          $('#toolbox > .tb-item').click(function(){
            var el = $(this);
            // After selecting toolbox item, the new element is drawn on the upper left corner of canvas.
             var x = 10, y= 10;
             // var shape = null;
              switch (el.attr('id')) {
                case 'tb-startevent':
                  workflow.initStartEvent(x, y);
                  break;
                case 'tb-intermediateevent':
                  workflow.initIntermediateEvent(x, y);
                  break;
                case 'tb-endevent':
                  workflow.initEndEvent(x, y);
                  break;
                case 'tb-gateway':
                  workflow.initGateway(x, y);
                  break;
                case 'tb-task':
                  workflow.initTask(x, y);
                  break;
                case 'tb-clearcanvas':
                  if (confirm('Are you sure you want to clear the workflow?')) {
                    workflow.clear();
                  }
                  break;
                case 'tb-sequenceflow':
                  el.toggleClass('active hover');
                  $('#connect-instructions').toggleClass('hide');
                  workflow.onConnect(function(e) {
                    if (e === 'success') {
                      // We have successfully connected two elements.
                      el.removeClass('active hover');
                      $('#connect-instructions').addClass('hide');
                    }
                  });
                  break;
                case 'tb-participant':
                  var poolTitle = prompt('Please enter title of pool:');
                  workflow.initPool(x,y, poolTitle); 
                  break;
                case 'tb-lane': 
                  alert('Please right-click on a drawn pool and select add lane.');
                  //workflow.initLane(x,y+10, laneTitle, 'poolTitle');   
                  break;
                default:
                  // Do nothing
                  break;
              }

          });
          alreadyLoaded = true;
        }
      });
    }
  };
});
</script>

<!-- IMPORT BUTTONS -->
<form>
  <table>
    <tr>
      <td> <input type="file" name="XPDL"> </td>
      <td> <input type="submit"> </td>
      <td> <input type="button" value="Load Default Workflow" id="import"></input> </td>
    </tr> 
  </table>
</form>

<br/>

<div id="workflow-info" class="row">
  <div class="col-md-11"><h3 id="workflow-name">My Workflow</h3>
    <div id="log"></div>
  </div>
  <div class="col-md-1"><button type="button" class="btn btn-default glyphicon glyphicon-question-sign" id="help"></button></div>
</div>
<div id="instructions" class="panel panel-info hide">
  <div class="panel-heading">
    Instructions:
  </div>
  <div class="panel-body">
    <ul>
      <li>Click on a toolbox item to add it to your workflow.</li>
      <li>Right-click on a workflow item for more options (e.g. to remove item).</li>
    </ul>
  </div>
</div>
<div id="connect-instructions" class="panel panel-primary hide">
  <div class="panel-heading">
    Click on two elements in your workflow to connect them...
  </div>
</div>
<div class="btn-group hide" id="toolbox">
    <!-- The buttons with dark borders have been currently implemented (have an associated action). -->
    <button type="button" class="btn btn-default tb-item" id="tb-startevent" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-intermediateevent" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-endevent" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-task" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-transaction"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-subprocess"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-callactivity"></button>
    <!-- <button type="button" class="btn btn-default tb-item" id="tb-implementation"></button> -->
    <!-- <button type="button" class="btn btn-default tb-item" id="tb-edge"></button> -->
    <button type="button" class="btn btn-default tb-item" id="tb-gateway" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-datastore"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-participant" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-lane" style="border:2px solid #333"></button>
    <!-- <button type="button" class="btn btn-default tb-item" id="tb-boundaryevent"></button> -->
    <!-- <button type="button" class="btn btn-default tb-item" id="tb-receivetask"></button> -->
    <!-- <button type="button" class="btn btn-default tb-item" id="tb-sendtask"></button> -->
    <button type="button" class="btn btn-default tb-item" id="tb-sequenceflow" style="border:2px solid #333"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-messageflow"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-association"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-annotation"></button>
    <button type="button" class="btn btn-default tb-item" id="tb-clearcanvas" style="border:2px solid #333"></button>
</div>
<div id="canvas"></div>
<div id="editor-contextmenu" class="dropdown clearfix">
  <ul class="dropdown-menu" role="menu">
    <li><a id="add-annotation">Add Annotation...</a></li>
    <li class="divider"></li>
    <li><a id="remove-element">Remove</a></li>
    <li class="divider"></li>
    <li><a id="add-pool">Add Pool Lane</a></li>
  </ul>
</div>
<div id="bottom-toolbar">
  <button type="button" class="btn btn-primary" id="save">Save</button>
  <button type="button" class="btn btn-default" id="convert">Convert to JSON</button>
  <div class="btn-group">
    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
      Export <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" role="menu">
      <li><a href="#">As File...</a></li>
      <li><a href="#">As Image...</a></li>
    </ul>
  </div>
</div>

<br/>
<br/>
<br/>
<textarea class='hide' id='jsonText'> test</textarea>
<br/>
<br/>
<br/>
<br/>