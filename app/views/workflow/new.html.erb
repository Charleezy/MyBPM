<%#= form_for :bpmn do |f| %>
  <%#= f.file_field :bpmn %>
<%# end %>
<%= javascript_include_tag 'ext_lib/xml2json.min.js' %>
<%= javascript_include_tag 'ext_lib/raphael.js' %>
<%= javascript_include_tag 'workflow/bpmn.js' %>
<script type="text/javascript">
  $(document).ready(function(){
    $('#toolbox').hide();

    var client = new XMLHttpRequest();

    // GET JSON FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/yyimks43gemdazq/jsonFile.json?dl=1&token_hash=AAEwKPu9isScXrMb-m9dVvUkYjxLiZTsM2DcEiIvPbXFnQ',false);
    client.send();
    var jsonText = client.responseText;
    
    // GET XPDL FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/j1w6mr83r8ug0om/simpleWorkflow.xpdl?dl=1&token_hash=AAH7PHIpUBmIim-BUM6uC7WC8lAqG-36HYOqxJHkbm2WzA',false);
    client.send();
    var XPDLText = client.responseText;

    // GET BPMN FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/8gmm8lss2j88i1b/testFile.bpmn?dl=1&token_hash=AAGfdvQIrgIaaLbx4cpJLbFEF9izHR-iuzOhMy5esvnV1w',false);
    client.send();
    var bpmnText = client.responseText;

    // CONVERT JSON TO XPDL (NOT WORKING)
    var x2js = new X2JS();
    var newXPDLText = x2js.json2xml_str(jsonText);
    
    // CREATE THE JAVASCRIPT OBJECT BASED ON THE JSON FILE
    var jsonObject = JSON.parse(jsonText);
    

    // FILL THE HTML ELEMENTS WITH TEXT
    $('#json').html(jsonText);
    $('#XPDL').html(XPDLText);
    $('#bpmn').html(bpmnText);
    $('#newXPDL').html(newXPDLText);

    var alreadyLoaded = false;


 
  
  $("#convert").click(function() {
			
		$.ajax({
			beforeSend: function(req) {
				req.setRequestHeader("Accept", "application/json");
			},
			url: "/workflow/xpdltojson", 
			type: "POST",
			success: function(data) {
				$('#canvas').height(500);
				$('#canvas').width(2000);
				if(!alreadyLoaded){
					var bpmn = new net.BpmnJS($('#canvas')[0], []);
					bpmn.plot(jsonObject);
					alreadyLoaded = true;
				}
			}
		});

    $('#canvas').height(500);
      $('#canvas').width(2000);
      if(!alreadyLoaded){
          $('#toolbox').show();
          var bpmn = new net.BpmnJS(jsonObject,$('#canvas')[0]);
          bpmn.plot();
          
          // Toolbox listeners
          $('#toolbox > .tb-item').click(function(){
            var el = $(this);
            // After selecting toolbox item, the new element is drawn on the upper left corner of canvas.
             var x = 10, y= 10;
             var shape = null;
              switch (el.attr('id')) {
                case 'tb-event':
                  shape = bpmn.paintEvent('xpdl stuff',x,y,30,30,'','#efefef','black');
                  bpmn.moveElement(shape);
                  bpmn.makeConnectableAndSelectable(shape);
                  break;
                case 'tb-implementation':
                  shape = bpmn.paintImplementation('xpdl stuff',x,y,90,60,'Text','#efefef','black');
                  bpmn.moveElement(shape);
                  bpmn.makeConnectableAndSelectable(shape);
                  break;
                case 'tb-route':
                  shape = bpmn.paintRoute('xpdl stuff',x,y,40,40,'Text','#efefef','black');
                  bpmn.moveElement(shape);
                  bpmn.makeConnectableAndSelectable(shape);
                  break;
                case 'tb-route':
                  shape = bpmn.paintRoute('xpdl stuff',x,y,40,40,'Text','#efefef','black');
                  bpmn.moveElement(shape);
                  bpmn.makeConnectableAndSelectable(shape);
                  break;
                case 'tb-connect':
                  bpmn.connecting = true;
                  this.firstToConnect = null;
                  
                  break;
                default:
                  // Do nothing
                  break;
              }

          });

          alreadyLoaded = true;
      }

      // DELETE FUNCTION 
      $(document).keyup(function(e) {
          switch(e.which){
            // DELETE WHEN "DELETE" (46) OR "BACKSPACE" (8) IS PRESSED
            case 46:
            case 8:
              // IT'S NOT REALLY DELETING RIGHT NOW, IT'S JUST HIDING
              bpmn.selectedShape.glowEffect.remove();
              bpmn.selectedShape.hide();
              if(bpmn.selectedShape.hasOwnProperty('pair')){
                bpmn.selectedShape.pair.hide();
              }
              break;
          }       
      });
  
  });
 
  });
</script>

<div id="file_input">
	<p>Select a workflow file to import.</p>
	<div class="well">
		<%= form_for :workflow, :url => {:action => "import"} do |f| %>
			<p>
				<%= f.file_field :workflow %>
			</p>
			<br />
			<%= f.submit %>
		<% end %>
	</div>
</div>

<button type="button" class="btn btn-info" id="convert">Convert to JSON</button>

Dynamic model:
<!-- TODO needs images or some form of styling -->
<div class="btn-group" id="toolbox"> <!-- style="height:40px;border:1px solid black;"-->
    <button type="button" class="btn btn-default tb-item" id="tb-default"> default</button>
    <button type="button" class="btn btn-default tb-item" id="tb-event"> event</button>
    <button type="button" class="btn btn-default tb-item" id="tb-implementation">implementation</button>
    <button type="button" class="btn btn-default tb-item" id="tb-route">route</button>
    <button type="button" class="btn btn-default tb-item" id="tb-edge">edge</button>
    <button type="button" class="btn btn-default tb-item" id="tb-participant">participant</button>
    <button type="button" class="btn btn-default tb-item" id="tb-gateway">gateway</button>
    <button type="button" class="btn btn-default tb-item" id="tb-lane">lane</button>
    <button type="button" class="btn btn-default tb-item" id="tb-boundaryevent">boundaryevent</button>
    <button type="button" class="btn btn-default tb-item" id="tb-receivetask">receivetask</button>
    <button type="button" class="btn btn-default tb-item" id="tb-sendtask">sendtask</button>
    <button type="button" class="btn btn-default tb-item" id="tb-subprocess">subprocess</button>
    <button type="button" class="btn btn-default tb-item" id="tb-datastore">datastore</button>
    <button type="button" class="btn btn-default tb-item" id="tb-text">text</button>
    <button type="button" class="btn btn-default tb-item" id="tb-connect">connect</button>
    <!-- TODO other items, such as transition? -->
</div>
<div id="canvas"></div>
