<%#= form_for :bpmn do |f| %>
  <%#= f.file_field :bpmn %>
<%# end %>
<%= javascript_include_tag 'ext_lib/xml2json.min.js' %>
<%= javascript_include_tag 'ext_lib/raphael.js' %>
<%= javascript_include_tag 'workflow/bpmn.js' %>
<script type="text/javascript">
  $(document).ready(function(){
    $('#toolbox').hide();

    var client = new XMLHttpRequest();

    // GET JSON FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/yyimks43gemdazq/jsonFile.json?dl=1&token_hash=AAEwKPu9isScXrMb-m9dVvUkYjxLiZTsM2DcEiIvPbXFnQ',false);
    client.send();
    var jsonText = client.responseText;
    
    // GET XPDL FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/j1w6mr83r8ug0om/simpleWorkflow.xpdl?dl=1&token_hash=AAH7PHIpUBmIim-BUM6uC7WC8lAqG-36HYOqxJHkbm2WzA',false);
    client.send();
    var XPDLText = client.responseText;

    // GET BPMN FILE
    client.open('GET', 'https://dl.dropboxusercontent.com/s/8gmm8lss2j88i1b/testFile.bpmn?dl=1&token_hash=AAGfdvQIrgIaaLbx4cpJLbFEF9izHR-iuzOhMy5esvnV1w',false);
    client.send();
    var bpmnText = client.responseText;

    // CONVERT JSON TO XPDL (NOT WORKING)
    var x2js = new X2JS();
    var newXPDLText = x2js.json2xml_str(jsonText);
    
    // CREATE THE JAVASCRIPT OBJECT BASED ON THE JSON FILE
    var jsonObject = JSON.parse(jsonText);
    console.log(jsonObject);

    // FILL THE HTML ELEMENTS WITH TEXT
    $('#json').html(jsonText);
    $('#XPDL').html(XPDLText);
    $('#bpmn').html(bpmnText);
    $('#newXPDL').html(newXPDLText);

    var alreadyLoaded = false;

    // WHEN YOU CLICK THE IMPORT BUTTON
    $('#MyButton').click(function(){

      $('#canvas').height(500);
      $('#canvas').width(2000);
      if(!alreadyLoaded){
          $('#toolbox').show();
          var bpmn = new net.BpmnJS(jsonObject,$('#canvas')[0]);
          bpmn.plot();
          
          // Toolbox listeners
          $('#toolbox > .tb-item').click(function(){
            var el = $(this);
            // After selecting toolbox item, the new element is drawn on the upper left corner of canvas.
             var x = 10, y= 10;
              switch (el.attr('id')) {
                case 'tb-event':
                  bpmn.moveElement(bpmn.paintEvent('xpdl stuff',x,y,30,30,'','#efefef','black'));
                  break;
                case 'tb-implementation':
                  bpmn.moveElement(bpmn.paintImplementation('xpdl stuff',x,y,90,60,'Text','#efefef','black'));
                  break;
                case 'tb-route':
                  bpmn.moveElement(bpmn.paintRoute('xpdl stuff',x,y,40,40,'Text','#efefef','black'));
                  break;
                case 'tb-route':
                  bpmn.moveElement(bpmn.paintRoute('xpdl stuff',x,y,40,40,'Text','#efefef','black'));
                  break;
                case 'tb-connect':
                  bpmn.connecting = true;
                  this.firstSelected = false;
                  alert('click on 2 objects to connect them');
                default:
                  // Do nothing
              }

          });

          alreadyLoaded = true;
      }
    });
  });
</script>


<input type="button" value="Import" id="MyButton"></input>
Dynamic model:

<!-- TODO needs images or some form of styling -->
<div class="btn-group" id="toolbox"> <!-- style="height:40px;border:1px solid black;"-->
    <button type="button" class="btn btn-default tb-item" id="tb-default"> default</button>
    <button type="button" class="btn btn-default tb-item" id="tb-event"> event</button>
    <button type="button" class="btn btn-default tb-item" id="tb-implementation">implementation</button>
    <button type="button" class="btn btn-default tb-item" id="tb-route">route</button>
    <button type="button" class="btn btn-default tb-item" id="tb-edge">edge</button>
    <button type="button" class="btn btn-default tb-item" id="tb-participant">participant</button>
    <button type="button" class="btn btn-default tb-item" id="tb-gateway">gateway</button>
    <button type="button" class="btn btn-default tb-item" id="tb-lane">lane</button>
    <button type="button" class="btn btn-default tb-item" id="tb-boundaryevent">boundaryevent</button>
    <button type="button" class="btn btn-default tb-item" id="tb-receivetask">receivetask</button>
    <button type="button" class="btn btn-default tb-item" id="tb-sendtask">sendtask</button>
    <button type="button" class="btn btn-default tb-item" id="tb-subprocess">subprocess</button>
    <button type="button" class="btn btn-default tb-item" id="tb-datastore">datastore</button>
    <button type="button" class="btn btn-default tb-item" id="tb-text">text</button>
    <button type="button" class="btn btn-default tb-item" id="tb-connect">connect</button>
    <!-- TODO other items, such as transition? -->
</div>
<div id="canvas"></div>
<%# This will get removed just keeping for testing %>
XPDL
<textarea id="XPDL" style="width:1050px;height:200px;margin:60px;"></textarea>
json
<textarea id="json" style="width:1050px;height:200px;margin:60px;"></textarea>
bpmn
<textarea id="bpmn" style="width:1050px;height:200px;margin:60px;"></textarea>
newXPDL
<textarea id="newXPDL" style="width:1050px;height:200px;margin:60px;"></textarea>
